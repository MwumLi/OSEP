#ifndef __SPLOS_IO_P
#define __SPLOS_IO_P

#import {
	./splos_string.pc;
	./splos_math.pc;
}

#define STDIN_FILENO	0
#define STDOUT_FILENO	1
#define STDERR_FILENO	2

#define BUFFER_SIZE		200
#define NUMBER_LEN		20

//打印字符串
void sp_printf_string(char s[]) {
	int len = sp_strlen(s);
	print(s);
	return;
}

//打印单个字符
void  sp_printf_char(char c) {
	int ret;

	char out[2]={c, '\0'};
	print(out);
	return;
}

//打印单个数字
void sp_printf_num(int num) {

	char s[NUMBER_LEN];

	sp_numtostring(num, s);	//数字转化称字符串  

	print(s);
	return ;
}

//打印字符数组
//arr[10]={'a','b','c','d'}
//输出结果: a,b,c,d
void sp_printf_chars(char arr[], int n) {
	int i = 0;
	int j = 0;
	char combine[BUFFER_SIZE];

	if(n < 1) {
		return -1;
	}
	while(j < n) {
		combine[i] = arr[j];
		i = i + 1;
		combine[i] = ',';
		i = i + 1;
		j = j + 1;
	}
	
	i = i - 1;
	combine[i] = '\0';

	sp_strcat(combine, '\n');	//添加换行
	print(combine);
	return ;
}


//打印数字数组
//arr[10]={11,34,655,-23}
//输出结果: 11,34,655,-23
void sp_printf_nums(int arr[], int n) {
	int i = 0;
	char numS[NUMBER_LEN];
	char arrS[BUFFER_SIZE];

	arrS[0] = '\0';	//用一个空字符串初始化
	while(i < n) {
		sp_numtostring(arr[i], numS);	//number转化成string
		sp_strcat(arrS, numS);	//附加字符串numS到arrS
		sp_strcat(arrS, ",");
	}

	i = sp_strlen(arrS);
	arrS[i - 1]	= '\0';	//去掉末尾逗号

	sp_strcat(arrS, "\n");	//添加换行
	print(arrS);
	return ;
}


#endif
